unit s_OnlineProceduresOrd;

interface
uses Classes, System.Types, System.Contnrs, SysUtils, Math, Variants, DateUtils,
     DB, IBDatabase, IBSQL, IBQuery,
     n_free_functions, v_constants, v_Functions, v_DataTrans,
     n_LogThreads, n_DataCacheInMemory, n_constants, n_DataSetsManager, n_server_common,IniFiles;

procedure prGeneralNewSystemProcOrder(Stream: TBoBMemoryStream; ThreadData: TThreadData);


const
  StandartErrorMessage        : string = 'Произошла ошибка выполнения. Если эта ошибка происходит регулярно, сообщите об этом по адресу valeriy.chichkov@vladislav.ua';
  coReloginText               : string = 'Войдите в систему заново введя свои логин и пароль.'; //Ошибка входа.
  SessionTimeMin              : integer = 30;
  constPayInvoiceFilterHeader : integer = 165;

type
 GetPageData=function (Stream: TBoBMemoryStream): string;


var
  Error             : string = '';
  UserID             : string = '';
  FirmID             : string = '';
  IP                 : string = '';
  UserLogin          : string = '';
  SessionID          : string = '';
  UserName           : string = '';
  Result             : string = '';
  ServerTime         : TDateTime;        // время сервера
  Roles              : Tai;              // Роли пользователя
  ShowImportPage   : boolean=false;    // Есть ли разрешенные типы импорта
  SysOptions       : boolean=false;    // Есть ли разрешение на управление константами
  Links23Loaded    : boolean = false;
  Short            : boolean = false;
  MustChangePass     : boolean = false;
  SessionTimeMinStr    : string;
  TechWork           : string = 'techwork.html';
  OnReadyScript      : string = '';

  BaseUrl            : string;
  BaseDir            : string;
  DescrUrl           : string;
  DescrImageUrl      : string;
  TmpDir             : string;
  DescrDir           : string;
  iniFileName        : string;
  globToHeader       : string;
  JSVersion          : string = 'v2.11.4';
  ContractId         : longint = 0;
  GoogleAnalytics     : string='<script type="text/javascript" > '#13#10'  (function(i,s,o,g,r,a,m){i[''GoogleAnalyticsObject'']=r;i[r]=i[r]||function(){'#13#10+
                               '  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'#13#10+
                               '  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'#13#10+
                               '  })(window,document,''script'',''//www.google-analytics.com/analytics.js'',''ga'');'#13#10#13#10+
                               '  ga(''create'', ''UA-41098000-1'', ''vladislav.ua'');'#13#10'  ga(''send'', ''pageview'');'#13#10#13#10'</script>'#13#10;

  ScriptName         : string;
  PageName           : string;
  TitleStr           : string;
  globToScript     : string;
  strPost,strGet,strCookie,strOther: TStringList;
  LogText: string;


implementation
uses  s_CommandFunc,n_CSSservice, n_CSSThreads, n_IBCntsPool, n_DataCacheObjects,n_WebArmProcedures,t_function,t_WebArmProcedures,s_Utils,n_OnlinePocedures;

procedure prGeneralNewSystemProcWebArm(Stream: TBoBMemoryStream; ThreadData: TThreadData);
 var
  StreamNew: TBoBMemoryStream;
  Res,nmProc,s,s1,lastuserid:String;
  result,pos, TabNum,Sys: integer;
  Date: TDateTime;
  i,j:integer;
  Template: string;
  IgnoreSpec: byte;
  c:  Char;
  wizardsearch: boolean;
  Top10Cookie:String;
begin
  Stream.Position:= 0;
  try
    strPost:=TStringList.Create;
    strGet:=TStringList.Create;
    strCookie:=TStringList.Create;
    strOther:=TStringList.Create;
    strPost.Text:=Stream.ReadStr;
    strGet.Text:=Stream.ReadStr;
    strCookie.Text:=Stream.ReadStr;
    strOther.Text:=Stream.ReadStr;
    ScriptName:=strOther.Values['scriptname'];
    MustChangePass:=false;
    LogText:='';
    SessionTimeMinStr:='3650';
    if FileExists('.\'+'server.ini') then begin
      IniFile:=TINIFile.Create('.\'+'server.ini');
    end else begin
      raise Exception.Create('Не найден ini-файл');
    end;
    TechWork:=IniFile.ReadString('Options', 'TechWorkText', TechWork);
    TmpDir:=IniFile.ReadString('Options', 'TmpDir', '.\tmp');
    DescrDir:=IniFile.ReadString('Options', 'DescrDir', '..\orders');
    BaseDir:=IniFile.ReadString('Options', 'BaseDir', '..\orders');
    BaseUrl:=IniFile.ReadString('Web', 'BaseUrl', '');
    DescrUrl:=IniFile.ReadString('Options', 'DescrUrl', '..\orders');
    DescrImageUrl:=IniFile.ReadString('Options', 'DescrImageUrl', '..\orders');
    StreamNew:=TBoBMemoryStream.Create;

    if (( (trim(strGet.Values['psw'])<>'') and (trim(strGet.Values['lgn'])<>'') ) or ( (trim(strPost.Values['psw'])<>'') and (trim(strPost.Values['lgn'])<>'') ) or (strCookie.Values['sid']<>'')) then begin
      StreamNew.Clear;
      StreamNew.WriteStr(fnGetFieldStrList(strPost,strGet,'psw'));
      StreamNew.WriteStr(fnGetFieldStrList(strPost,strGet,'lgn'));
      StreamNew.WriteStr(strCookie.Values['sid']);
      StreamNew.WriteStr(strOther.Values['ip']);
      StreamNew.WriteStr(strOther.Values['agent']);
      prWebArmAutenticate(StreamNew, ThreadData);
        StreamNew.Position:=0;
        result:=StreamNew.ReadInt;
        if result=aeSuccess then begin
          UserID:=IntToStr(StreamNew.ReadInt);
          SessionID:=StreamNew.ReadStr;
          ServerTime:=StreamNew.ReadDouble;
          Roles:=StreamNew.ReadIntArray;
          ShowImportPage:=StreamNew.ReadBool;
          Links23Loaded:=StreamNew.ReadBool;
          SysOptions:=StreamNew.ReadBool;
          UserName:=StreamNew.ReadStr;
          FirmID:=strOther.Values['FirmID'];
          s:='';



          if (strOther.Values['act']='changepass') then begin
            nmProc := 'fnChangePasswordWebarm'; // имя процедуры/функции
            prSetThLogParams(ThreadData, 0, StrToInt(UserID), IsWe,
            'oldpass='+strPost.Values['opass']+#13#10+'newpass1='+strPost.Values['npass1']+#13#10+'newpass2='+strPost.Values['npass2']); // логирование
            Res:=fnChangePasswordWebarm(StrToInt(UserID),strPost.Values['opass'], strPost.Values['npass1'], strPost.Values['npass2']);
            if Res<>'' then begin
              raise EBOBError.Create('jqswMessageError('''+res+''');');
            end else  begin
              Stream.Clear;
              Stream.WriteInt(aeSuccess);
              Stream.WriteStr(' jqswMessage(''Пароль успешно изменен''); ');
            end;
          end



        end else begin
          if (strOther.Values['kindofrequest']='page') then   begin
            OnReadyScript:='';
            Stream.Clear;
            Stream.WriteInt(aeCommonError);
            s:=fnHeader(false);
            Stream.WriteLongStr(s);
            s:=nonAutenticatedMessage(false, false);
            Stream.WriteStr(fnWriteSimpleText(s));
            Stream.WriteLongStr(fnFooter);
          end
          else if (strOther.Values['kindofrequest']='command') then begin
            if (strOther.Values['act']='quit') then begin //
              Stream.Clear;
              Stream.WriteInt(aeSuccess);
              s:=s+'setCookie_("sid", "", getExpDate_(0,0,0),"/",0,0);'#13#10;
              s:=s+'s=document.location.href;'#13#10;
              s:=s+'s=(s.substr(s.length-1)==''#'')?s.substr(0, s.length-1):s;'#13#10;
              s:=s+'document.location.href=s;';
              Stream.WriteStr(s);
          end
          else
            setErrorStrs(StreamNew,Stream);
          end;
        end;
    end else begin
      if (strOther.Values['kindofrequest']='page') then   begin
        OnReadyScript:='';
        Stream.Clear;
        Stream.WriteInt(aeCommonError);
        s:=fnHeader(false);
        Stream.WriteLongStr(s);
        Stream.WriteStr(fnWriteSimpleText('Войдите в систему заново введя свои логин и пароль.'));
        Stream.WriteLongStr(fnFooter);
      end
      else if (strOther.Values['kindofrequest']='command') then begin
        Stream.Clear;
        Stream.WriteInt(aeCommonError);
        Stream.WriteStr(' jqswMessageError(''Отсутствует логин или пароль.'');');
      end;

    end;


  except
    on E: EBOBError do prSaveCommonError(Stream, ThreadData, nmProc, E.Message, '', True);
    on E: Exception do prSaveCommonError(Stream, ThreadData, nmProc, E.Message, '', False);
  end;
  StreamNew.Free;
  strPost.Free;
  strGet.Free;
  strCookie.Free;
  strOther.Free;
  Stream.Position:= 0;

  end;



end.
